import { APP_BASE_HREF } from '@angular/common';
import { Inject, Injectable, Injector } from '@angular/core';
import { COOKIE_OPTIONS } from './tokens';
import { mergeOptions } from './utils';
import * as ɵngcc0 from '@angular/core';
export class CookieOptionsProvider {
    constructor(options = {}, injector) {
        this.injector = injector;
        this.defaultOptions = {
            path: this.injector.get(APP_BASE_HREF, '/'),
            domain: undefined,
            expires: undefined,
            secure: false,
            httpOnly: false
        };
        this.options = mergeOptions(this.defaultOptions, options);
    }
}
CookieOptionsProvider.ɵfac = function CookieOptionsProvider_Factory(t) { return new (t || CookieOptionsProvider)(ɵngcc0.ɵɵinject(COOKIE_OPTIONS), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
CookieOptionsProvider.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CookieOptionsProvider, factory: CookieOptionsProvider.ɵfac });
CookieOptionsProvider.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COOKIE_OPTIONS,] }] },
    { type: Injector }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CookieOptionsProvider, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COOKIE_OPTIONS]
            }] }, { type: ɵngcc0.Injector }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLW9wdGlvbnMucHJvdmlkZXIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jb29raWUvc3JjL2xpYi9jb29raWUtb3B0aW9ucy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFNBQVMsQ0FBQzs7QUFHdkMsTUFBTSxPQUFPLHFCQUFxQjtBQUNsQyxJQUlFLFlBQW9DLFVBQXlCLEVBQUUsRUFDM0MsUUFBa0I7QUFDeEMsUUFEc0IsYUFBUSxHQUFSLFFBQVEsQ0FBVTtBQUFDLFFBQ3JDLElBQUksQ0FBQyxjQUFjLEdBQUc7QUFDMUIsWUFBTSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQztBQUNqRCxZQUFNLE1BQU0sRUFBRSxTQUFTO0FBQ3ZCLFlBQU0sT0FBTyxFQUFFLFNBQVM7QUFDeEIsWUFBTSxNQUFNLEVBQUUsS0FBSztBQUNuQixZQUFNLFFBQVEsRUFBRSxLQUFLO0FBQ3JCLFNBQUssQ0FBQztBQUNOLFFBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM5RCxJQUFFLENBQUM7QUFDSDtpREFqQkMsVUFBVTsrSEFDVDtBQUFDO0FBRVMsNENBR0csTUFBTSxTQUFDLGNBQWM7QUFBUyxZQVpoQixRQUFRO0FBQUc7Ozs7Ozs2REFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQVBQX0JBU0VfSFJFRiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENvb2tpZU9wdGlvbnMgfSBmcm9tICcuL2Nvb2tpZS5tb2RlbCc7XG5pbXBvcnQgeyBDT09LSUVfT1BUSU9OUyB9IGZyb20gJy4vdG9rZW5zJztcbmltcG9ydCB7IG1lcmdlT3B0aW9ucyB9IGZyb20gJy4vdXRpbHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ29va2llT3B0aW9uc1Byb3ZpZGVyIHtcblxuICByZWFkb25seSBvcHRpb25zOiBDb29raWVPcHRpb25zO1xuICBwcml2YXRlIHJlYWRvbmx5IGRlZmF1bHRPcHRpb25zOiBDb29raWVPcHRpb25zO1xuXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoQ09PS0lFX09QVElPTlMpIG9wdGlvbnM6IENvb2tpZU9wdGlvbnMgPSB7fSxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcbiAgICB0aGlzLmRlZmF1bHRPcHRpb25zID0ge1xuICAgICAgcGF0aDogdGhpcy5pbmplY3Rvci5nZXQoQVBQX0JBU0VfSFJFRiwgJy8nKSxcbiAgICAgIGRvbWFpbjogdW5kZWZpbmVkLFxuICAgICAgZXhwaXJlczogdW5kZWZpbmVkLFxuICAgICAgc2VjdXJlOiBmYWxzZSxcbiAgICAgIGh0dHBPbmx5OiBmYWxzZVxuICAgIH07XG4gICAgdGhpcy5vcHRpb25zID0gbWVyZ2VPcHRpb25zKHRoaXMuZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xuICB9XG5cbn1cbiJdfQ==