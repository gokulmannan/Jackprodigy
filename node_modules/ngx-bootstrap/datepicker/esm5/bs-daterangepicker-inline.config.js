/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { BsDatepickerConfig } from './bs-datepicker.config';
import * as ɵngcc0 from '@angular/core';
var BsDaterangepickerInlineConfig = /** @class */ (function (_super) {
    tslib_1.__extends(BsDaterangepickerInlineConfig, _super);
    function BsDaterangepickerInlineConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // DatepickerRenderOptions
        _this.displayMonths = 2;
        /**
         * turn on/off animation
         */
        _this.isAnimated = false;
        return _this;
    }
BsDaterangepickerInlineConfig.ɵfac = function BsDaterangepickerInlineConfig_Factory(t) { return ɵBsDaterangepickerInlineConfig_BaseFactory(t || BsDaterangepickerInlineConfig); };
BsDaterangepickerInlineConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsDaterangepickerInlineConfig, factory: function (t) { return BsDaterangepickerInlineConfig.ɵfac(t); } });
var ɵBsDaterangepickerInlineConfig_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(BsDaterangepickerInlineConfig);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsDaterangepickerInlineConfig, [{
        type: Injectable
    }], null, null); })();
    return BsDaterangepickerInlineConfig;
}(BsDatepickerConfig));
export { BsDaterangepickerInlineConfig };
if (false) {
    /** @type {?} */
    BsDaterangepickerInlineConfig.prototype.displayMonths;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDaterangepickerInlineConfig.prototype.isAnimated;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXJhbmdlcGlja2VyLWlubGluZS5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvZGF0ZXBpY2tlci9icy1kYXRlcmFuZ2VwaWNrZXItaW5saW5lLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBRTVEO0FBQ3lELElBQU4seURBQWtCO0FBQUMsSUFEdEU7QUFDNkIsUUFEN0IscUVBTUM7QUFDRDtBQUFtQyxRQUovQixtQkFBYSxHQUFHLENBQUMsQ0FBQztBQUN0QjtBQUFZO0FBQ0E7QUFDWixRQURJLGdCQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ3ZCO0FBQ29CLElBRHBCLENBQUM7aUVBTkEsVUFBVTs7Ozs7MEJBQ0w7QUFBQyxJQUtQLG9DQUFDO0FBQ0EsQ0FEQSxBQU5ELENBQ21ELGtCQUFrQixHQUtwRTtBQUNELFNBTmEsNkJBQTZCO0FBQUk7QUFBYTtBQUNuRCxJQUNKLHNEQUFrQjtBQUN0QjtBQUFRO0FBQ0o7QUFBaUI7QUFFbEIsSUFGQyxtREFBbUI7QUFDdkI7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gJy4vYnMtZGF0ZXBpY2tlci5jb25maWcnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQnNEYXRlcmFuZ2VwaWNrZXJJbmxpbmVDb25maWcgZXh0ZW5kcyBCc0RhdGVwaWNrZXJDb25maWcge1xuICAgIC8vIERhdGVwaWNrZXJSZW5kZXJPcHRpb25zXG4gICAgZGlzcGxheU1vbnRocyA9IDI7XG4gICAgLyoqIHR1cm4gb24vb2ZmIGFuaW1hdGlvbiAqL1xuICAgIGlzQW5pbWF0ZWQgPSBmYWxzZTtcbn1cbiJdfQ==